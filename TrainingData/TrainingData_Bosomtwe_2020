/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var selectedLakes = ee.FeatureCollection("projects/ee-cvanmeursdata/assets/Thesis/Selected_Lakes");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Import geometry and select lake. 
var lakeBosomtwe = ee.Feature(selectedLakes.filter(ee.Filter.eq('Hylak_id', 15892)).first());

// Set center and add lake outline. 
Map.centerObject(lakeBosomtwe, 13);
Map.addLayer(lakeBosomtwe, {}, 'Lake Outline');

// Function to set class to bragg/water
var setClassWater = function(feature) {
  return feature.set('class', 1);
};
var setClassBragg = function(feature) {
  return feature.set('class', 2);
};

// ------------------------------------------------------------------------------------------------ //
// ----------------------------- (1). SELECTION BRAGG PATCHES ------------------------------------- //
// ------------------------------------------------------------------------------------------------ //

// ------------------------------------------------------------------------------------------------ //
// ----------------------------------------- 2020 ------------------------------------------------- //
// ------------------------------------------------------------------------------------------------ //

// JANUARY

// Jan 5th
var waterBosomtwe20200105 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Jan 11th
var waterBosomtwe20200111 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Jan 17th
var waterBosomtwe20200117 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Jan 23rd
var waterBosomtwe20200123 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Jan 29th
var waterBosomtwe20200129 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// FEBRUARY

// Feb 4th
var waterBosomtwe20200204 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Feb 10th
var waterBosomtwe20200210 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Feb 16th
var waterBosomtwe20200216 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Feb 22nd
var waterBosomtwe20200222 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Feb 28th
var waterBosomtwe20200228 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// MARCH

// Mar 5th
var waterBosomtwe20200305 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Mar 11th
var waterBosomtwe20200311 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Mar 17th
var waterBosomtwe20200317 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Mar 23rd
var waterBosomtwe20200323 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Mar 29th
var waterBosomtwe20200329 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// APRIL

// Apr 4th
var waterBosomtwe20200404 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Apr 10th
var waterBosomtwe20200410 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Apr 16th
var waterBosomtwe20200416 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Apr 22nd
var waterBosomtwe20200422 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Apr 28th
var waterBosomtwe20200428 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// MAY

// May 4th
var waterBosomtwe20200504 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// May 10th
var braggBosomtwe20200510 = ee.Feature(
                            ee.Geometry.MultiPolygon(
        [[[[-1.4163458346318958, 6.536449754204034],
           [-1.4205515383672473, 6.536535026954719],
           [-1.423383951086974, 6.536108663055863],
           [-1.4266455172490833, 6.535085388215495],
           [-1.428276300330138, 6.533891564922418],
           [-1.4292204379033802, 6.531930277613341],
           [-1.4287912844609973, 6.53082172051636],
           [-1.4248430727910755, 6.530565899299122],
           [-1.4228689669561145, 6.531077541602851],
           [-1.422783136267638, 6.528348776606274],
           [-1.4189207552861927, 6.528178228300112],
           [-1.4163458346318958, 6.527837131513516],
           [-1.4122259615850208, 6.5289456952203135],
           [-1.4118826388311145, 6.531418636181415],
           [-1.4144575594854114, 6.533976838109272]]],
         [[[-1.4305078982305286, 6.530651173052738],
           [-1.4341127871465442, 6.5292015172656015],
           [-1.4360010622930286, 6.527154937243265],
           [-1.437889337439513, 6.525364172862412],
           [-1.4381468295049427, 6.523573402079471],
           [-1.4391767977666614, 6.521015147001606],
           [-1.439434289832091, 6.519139084979173],
           [-1.4397776125859973, 6.517518843946925],
           [-1.437116861243224, 6.518456878866827],
           [-1.4335119723272083, 6.520588769885739],
           [-1.4333403109502552, 6.522891202002328],
           [-1.433941125769591, 6.523317577159394],
           [-1.4326536654424427, 6.526899114152313],
           [-1.4299929140996692, 6.525790545914803],
           [-1.4305078982305286, 6.528092954125248],
           [-1.4285337923955677, 6.529627887050558]]],
         [[[-1.4370885926675236, 6.514647538236941],
           [-1.440350158829633, 6.5104689738263115],
           [-1.4416376191567815, 6.5070578750544],
           [-1.4413801270913518, 6.5004914447164115],
           [-1.4420667725991643, 6.497421395915048],
           [-1.4405218202065861, 6.494180768521847],
           [-1.4369169312905705, 6.492048765436562],
           [-1.4345136720132268, 6.490513717625013],
           [-1.4309946137856877, 6.494521888177521],
           [-1.4303937989663518, 6.502623412023295],
           [-1.4297929841470158, 6.507995929526292],
           [-1.425072296280805, 6.510639528156661],
           [-1.4241281587075627, 6.514818091147313],
           [-1.430737121720258, 6.518058585427303],
           [-1.4361444550942815, 6.515756131118038]]],
         [[[-1.4054602809442907, 6.489983504638765],
           [-1.4070910640253453, 6.489045416574122],
           [-1.4055461116327672, 6.488022045783926]]],
         [[[-1.396963042785111, 6.481625931262001],
           [-1.3953322597040563, 6.4780440716909045],
           [-1.3939589686884313, 6.474973886106859],
           [-1.3912982173456578, 6.474291620107784],
           [-1.38949577288765, 6.475144452462555],
           [-1.3907832332147985, 6.4777882236056],
           [-1.392843169738236, 6.4788116151684685],
           [-1.3935298152460485, 6.480943674256987],
           [-1.394388122130814, 6.482308187344042],
           [-1.3960189052118688, 6.48290516065861],
           [-1.3972205348505407, 6.482990442502998]]]]), 
        {
          "class": 2, 
          "system:index": "0"
        });

var waterBosomtwe20200510 = ee.Feature(lakeBosomtwe.difference({'right': braggBosomtwe20200510, 'maxError': 1})).set("class", 1);

// May 16th
var waterBosomtwe20200516 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// May 22nd
var waterBosomtwe20200522 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// May 28th
var braggBosomtwe20200528 = ee.Feature(ee.Geometry.MultiPolygon(
        [[[[-1.4450132845830677, 6.483151447941709],
           [-1.443983316321349, 6.481189962498056],
           [-1.4425241946172473, 6.479825446385721],
           [-1.4413225649785755, 6.477778665296988],
           [-1.4402067660283802, 6.4768405545232985],
           [-1.437116861243224, 6.474282061732978],
           [-1.4352285860967395, 6.4735145113674895],
           [-1.4333403109502552, 6.473343944461138],
           [-1.431623697180724, 6.473855645007297],
           [-1.431194543738341, 6.475220177261736],
           [-1.4294779299688098, 6.474367345034887],
           [-1.4278471468877552, 6.47760809983149],
           [-1.4269888400029895, 6.480081293437956],
           [-1.4266455172490833, 6.482298629121089],
           [-1.4256155489873645, 6.484515955054244],
           [-1.427503824133849, 6.486562708797434],
           [-1.4336836337041614, 6.489035858478938],
           [-1.4356577395391223, 6.486306865034097],
           [-1.439434289832091, 6.48690383361315],
           [-1.4422667025518177, 6.487415520403742],
           [-1.4452707766484973, 6.485454051551618],
           [-1.4450991152715442, 6.483833701959608]]],
         [[[-1.4448416232061145, 6.494834920453208],
           [-1.445356607336974, 6.491082593860722],
           [-1.4423525332402942, 6.4904856302335645],
           [-1.437889337439513, 6.4912531547670715],
           [-1.4350569247197864, 6.492702920138439],
           [-1.4285337923955677, 6.49167955678022],
           [-1.4242422579717395, 6.491167874321123],
           [-1.4207231997442005, 6.491423715615663],
           [-1.4177191256475208, 6.49364100138943],
           [-1.4213240145635364, 6.496028836684688],
           [-1.4267313479375598, 6.497222750083376],
           [-1.4277613161992786, 6.49543187892302],
           [-1.4297354220342395, 6.496199395915101],
           [-1.4317095278692005, 6.498160822909001],
           [-1.437288522620177, 6.497393308909058],
           [-1.4399492739629505, 6.495090759884119],
           [-1.4430391787481067, 6.494067401380177]]],
         [[[-1.404140199163244, 6.525596095053222],
           [-1.4095475325372675, 6.5257666442387565],
           [-1.4103200087335566, 6.523975874894521],
           [-1.4095475325372675, 6.522270374330125],
           [-1.4059426436212519, 6.523037850302466]]]]), 
        {
          "class": 2, 
          "system:index": "0"
        });

var waterBosomtwe20200528 = ee.Feature(lakeBosomtwe.difference({'right': braggBosomtwe20200528, 'maxError': 1})).set("class", 1);

// JUNE

// Jun 3rd
var waterBosomtwe20200603 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Jun 9th
var waterBosomtwe20200609 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Jun 15th
var waterBosomtwe20200615 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Jun 27th
var waterBosomtwe20200627 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// JULY

// Jul 3rd
var waterBosomtwe20200703 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Jul 9th
var waterBosomtwe20200709 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Jul 15th
var waterBosomtwe20200715 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Jul 21st
var waterBosomtwe20200721 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });
        
// Jul 27th
var waterBosomtwe20200727 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// AUGUST

// Aug 2nd
var waterBosomtwe20200802 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Aug 8th
var waterBosomtwe20200808 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Aug 14th
var waterBosomtwe20200814 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Aug 20th
var waterBosomtwe20200820 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Aug 26th
var waterBosomtwe20200826 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// SEPTEMBER

// Sep 1st
var waterBosomtwe20200901 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Sep 7th
var waterBosomtwe20200907 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Sep 13th
var waterBosomtwe20200913 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Sep 19th
var waterBosomtwe20200919 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Sep 25th
var waterBosomtwe20200925 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// OCTOBER

// Oct 1st
var waterBosomtwe20201001 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Oct 7th
var waterBosomtwe20201007 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Oct 13th
var waterBosomtwe20201013 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Oct 19th
var braggBosomtwe20201019 = ee.Feature(
                            ee.Geometry.Polygon(
        [[[-1.4024725944659933, 6.510813125467105],
          [-1.4051333458087667, 6.509875076257593],
          [-1.4058199913165792, 6.508681192910962],
          [-1.4049616844318136, 6.506634529142356],
          [-1.4080515892169698, 6.5058670280792805],
          [-1.4077082664630636, 6.5041614659638745],
          [-1.4045325309894308, 6.500665045533164],
          [-1.400755980696462, 6.499385861251576],
          [-1.3994685203693136, 6.501517833246355],
          [-1.3965502769611104, 6.5023706195130435],
          [-1.3951769859454854, 6.5002386511341745],
          [-1.3914862663409933, 6.5010061607919996],
          [-1.3892546684406026, 6.50109143957056],
          [-1.3893404991290792, 6.505014247745204],
          [-1.3947478325031026, 6.506122861897239],
          [-1.3988677055499776, 6.507572584404831],
          [-1.3998118431232198, 6.5101309080340055]]]), 
        {
          "class": 2, 
          "system:index": "0"
        });

var waterBosomtwe20201019 = ee.Feature(lakeBosomtwe.difference({'right': braggBosomtwe20201019, 'maxError': 1})).set("class", 1);

// Oct 25th
var waterBosomtwe20201025 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Oct 31st
var waterBosomtwe20201031 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// NOVEMBER

// Nov 6th
var waterBosomtwe20201106 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Nov 12th
var waterBosomtwe20201112 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Nov 18th
var waterBosomtwe20201118 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Nov 24th
var waterBosomtwe20201124 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Nov 30th
var waterBosomtwe20201130 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// DECEMBER

// Dec 6th
var waterBosomtwe20201206 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Dec 12th
var braggBosomtwe20201212 = ee.Feature(
                            ee.Geometry.MultiPolygon(
        [[[[-1.3833868502568958, 6.509588114981035],
           [-1.3866484164190052, 6.508820618431154],
           [-1.3868200777959583, 6.506688677416365],
           [-1.3863909243535755, 6.504812561838951],
           [-1.3848459719609973, 6.504983118090013],
           [-1.3845884798955677, 6.50370394479611],
           [-1.3867342471074817, 6.503618666460752],
           [-1.387678384680724, 6.502680603816846],
           [-1.3868200777959583, 6.501998375339893],
           [-1.3854467867803333, 6.501742539422349],
           [-1.3859617709111927, 6.500122242254774],
           [-1.385103464026427, 6.498587219069635],
           [-1.3840734957647083, 6.497052191199884],
           [-1.383129358191466, 6.497052191199884],
           [-1.3827860354375598, 6.498160822909001],
           [-1.3827860354375598, 6.4996105683803],
           [-1.3827002047490833, 6.501316145937134],
           [-1.3824427126836536, 6.503021717708094],
           [-1.3822710513067005, 6.50472728369173],
           [-1.3832151888799427, 6.506006454380592],
           [-1.3830435275029895, 6.507285621812644]]],
         [[[-1.3814127444219348, 6.508820618431154],
           [-1.379610299963927, 6.510526164726673],
           [-1.3812410830449817, 6.508735340964329],
           [-1.3798677920293567, 6.508223675859192],
           [-1.3769495486211536, 6.510526164726673],
           [-1.3777220248174427, 6.512061151438889],
           [-1.3781511782598255, 6.513255026747572],
           [-1.3800394534063098, 6.512913919806306],
           [-1.381756067175841, 6.510696719037583]]],
         [[[-1.3816702364873645, 6.506688677416365],
           [-1.3796961306524036, 6.5034481097466275],
           [-1.3781511782598255, 6.50242476824649],
           [-1.3759195803594348, 6.50370394479611],
           [-1.3775503634404895, 6.50805312070831],
           [-1.3799536227178333, 6.507285621812644]]]]), 
        {
          "class": 2, 
          "system:index": "0"
        });

var waterBosomtwe20201212 = ee.Feature(lakeBosomtwe.difference({'right': braggBosomtwe20201212, 'maxError': 1})).set("class", 1);

// Dec 18th
var waterBosomtwe20201218 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Dec 24th
var waterBosomtwe20201224 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });

// Dec 30th
var waterBosomtwe20201230 = ee.Feature(lakeBosomtwe.geometry(), 
        {
          "class": 1, 
          "system:index": "0"
        });


// --------------------------------- (b). compile lists ------------------------------------------- //

var waterBosomtwe2020 = ee.List([
waterBosomtwe20200105,
waterBosomtwe20200117,
waterBosomtwe20200129,
waterBosomtwe20200210,
waterBosomtwe20200222,
waterBosomtwe20200305,
waterBosomtwe20200317,
waterBosomtwe20200329,
waterBosomtwe20200410,
waterBosomtwe20200422,
waterBosomtwe20200504,
waterBosomtwe20200516,
waterBosomtwe20200528,
waterBosomtwe20200609,
waterBosomtwe20200703,
waterBosomtwe20200715,
waterBosomtwe20200727,
waterBosomtwe20200808,
waterBosomtwe20200820,
waterBosomtwe20200901,
waterBosomtwe20200913,
waterBosomtwe20200925,
waterBosomtwe20201007,
waterBosomtwe20201019,
waterBosomtwe20201031,
waterBosomtwe20201112,
waterBosomtwe20201124,
waterBosomtwe20201206,
waterBosomtwe20201218,
waterBosomtwe20201230,
waterBosomtwe20200111,
waterBosomtwe20200123,
waterBosomtwe20200204,
waterBosomtwe20200216,
waterBosomtwe20200228,
waterBosomtwe20200311,
waterBosomtwe20200323,
waterBosomtwe20200404,
waterBosomtwe20200416,
waterBosomtwe20200428,
waterBosomtwe20200510,
waterBosomtwe20200522,
waterBosomtwe20200603,
waterBosomtwe20200615,
waterBosomtwe20200627,
waterBosomtwe20200709,
waterBosomtwe20200721,
waterBosomtwe20200802,
waterBosomtwe20200814,
waterBosomtwe20200826,
waterBosomtwe20200907,
waterBosomtwe20200919,
waterBosomtwe20201001,
waterBosomtwe20201013,
waterBosomtwe20201025,
waterBosomtwe20201106,
waterBosomtwe20201118,
waterBosomtwe20201130,
waterBosomtwe20201212,
waterBosomtwe20201224,
]);
var braggBosomtwe2020 = ee.List([
  braggBosomtwe20200528,
  braggBosomtwe20201019,
  braggBosomtwe20200510, 
  braggBosomtwe20201212,
]);

// ---------------------------------- (c). sample lists ------------------------------------------- //

// Sample the lists with random points, so that they can be used in classification. 
var randomPointsWater = waterBosomtwe2020.map(function(listElement) {
  return ee.FeatureCollection.randomPoints({
    region: ee.Feature(listElement).geometry(),
    points: 50, 
    seed: 0, 
    maxError: 1,
  }).map(setClassWater);
});
var randomPointsBragg = braggBosomtwe2020.map(function(listElement) {
  return ee.FeatureCollection.randomPoints({
    region: ee.Feature(listElement).geometry(),
    points: 50, 
    seed: 0, 
    maxError: 1,
  }).map(setClassBragg);
});

// ------------------------------------------------------------------------------------------------ //
// --------------------------- (2). COMPUTE SENTINEL-1 IMAGERY ------------------------------------ //
// ------------------------------------------------------------------------------------------------ //

// Define a neighborhood with a kernel.
var kernel = ee.Kernel.circle({radius: 4});

// Function to compute Entropy. 
var computeEntropy = function (image) {
  var ent =  ee.Image(image.toInt32()).entropy(kernel).rename('VV_E', 'VH_E');
  return image.addBands(ent);
};

// Function to compute GLCM Features. 
var computeGlcm = function (image) {
  var glcm = ee.Image(image.toInt32()).glcmTexture(4); 
  return image.addBands(glcm);
};

// Compile list of the selected Bands: VV, VH, Ent, GLCM.
var selectedBands = ee.List([
  "VV",
  "VH",
  "VV_E",
  "VH_E",
  "VV_asm",
  "VV_contrast",
  "VV_corr",
  "VV_var",
  "VV_idm",
  "VV_savg",
  "VV_svar",
  "VV_sent",
  "VV_ent",
  "VV_dvar",
  "VV_dent",
  "VV_diss",
  "VV_inertia",
  "VV_shade",
  "VV_prom",
  "VH_asm",
  "VH_contrast",
  "VH_corr",
  "VH_var",
  "VH_idm",
  "VH_savg",
  "VH_svar",
  "VH_sent",
  "VH_ent",
  "VH_dvar",
  "VH_dent",
  "VH_diss",
  "VH_inertia",
  "VH_shade",
  "VH_prom",
]);

// Total Sentinel-1 Imagery for 2020-2021
var Sentinel = ee.ImageCollection('COPERNICUS/S1_GRD')
          .filterBounds(lakeBosomtwe.geometry())
          .filter(ee.Filter.eq('orbitProperties_pass', 'ASCENDING'))
          .filter(ee.Filter.date('2020-01-01', '2021-01-01'))
          .select('VV', 'VH')
          .map(computeEntropy)
          .map(computeGlcm)
          .select(selectedBands);
          
// ImageCollection to List
var S12020 = Sentinel.toList(Sentinel.size());

// Bragg Dates for Sentinel-1 Imagery 2018-2019.
var bD = ee.List(['2020-05-28', '2020-10-19', '2020-05-10', '2020-12-12']);
var bDn = bD.map(function(date) {
  var nextDate = ee.Date(date).advance(1, 'day');
  var dateCombo = [ee.Date(date), nextDate];
  return dateCombo;
});

// Bragg Sentinel-1 Imagery for 2020-2021, compiled from the Bragg Dates. 
var SB12020 = bDn.map(function(date) {
  return ee.Image(Sentinel.filter(ee.Filter.date(ee.List(date).get(0), ee.List(date).get(1))).first());
});


// ------------------------------------------------------------------------------------------------ //
// ------------------------------- (3). COMPUTE SNIC IMAGERY -------------------------------------- //
// ------------------------------------------------------------------------------------------------ //

// function to compute SNIC superpixels. 
var afn_SNIC = function(imageOriginal) {
  
  // Adjustable Superpixel Seed and SNIC segmentation Parameters:
  var superPixelSize = 50;
  var compactness = 1;
  var connectivity = 4;
  var seedShape = 'square';
  var neighborhoodSize = 2 * superPixelSize;
  
  // Creates seed grid. 
    var theSeeds = ee.Algorithms.Image.Segmentation.seedGrid(
        superPixelSize, seedShape);
  
  // Preforms actual SNIC Segmentation. 
    var snic = ee.Algorithms.Image.Segmentation.SNIC({
        image: imageOriginal,
        size: superPixelSize,
        compactness: compactness,
        connectivity: connectivity,
        neighborhoodSize: neighborhoodSize,
        seeds: theSeeds
    });
  
  // Copies 'system:time_start' parameter to the computed SNIC imagery. 
    var theStack = snic.addBands(theSeeds).copyProperties({
      source: imageOriginal, 
      properties: ['system:time_start']
    });
    return (theStack);
};


// Create SNIC images for all dates, and seperately for all Bragg dates.  
var SNICsWater = S12020.map(afn_SNIC);
var SNICsBragg = SB12020.map(afn_SNIC);

// Compute list of band names. 
var propertyList = ee.Image(SNICsWater.get(0)).bandNames();//.slice(1, 41);

// ------------------------------------------------------------------------------------------------ //
// ---------------------------------- (5). OVERLAY PIXELS ----------------------------------------- //
// ------------------------------------------------------------------------------------------------ //

// Zip together SNIC Imagery with the random water samples.
var waterPredictor = ee.List(randomPointsWater).zip(SNICsWater);

// Overlay and SNIC values for water by applying reduceRegions. 
var fcSamplesWater = waterPredictor.map(function(imagePair) {
  return ee.Image(ee.List(imagePair).get(1)).select(propertyList).reduceRegions({
    collection: ee.FeatureCollection(ee.List(imagePair).get(0)),
    reducer: ee.Reducer.first(), 
    scale: 20,
  });
});


// Zip together SNIC Imagery with the random Bragg samples.
var BraggPredictor = ee.List(randomPointsBragg).zip(SNICsBragg);

// Overlay and SNIC values for Bragg by applying reduceRegions. 
var fcSamplesBragg = BraggPredictor.map(function(imagePair) {
  return ee.Image(ee.List(imagePair).get(1)).select(propertyList).reduceRegions({
    collection: ee.FeatureCollection(ee.List(imagePair).get(0)),
    reducer: ee.Reducer.first(), 
    scale: 20,
  });
});


// Merge all waterTraining instances together to create one water data training set. 
var mergerWater = ee.FeatureCollection([]);
for (var i=0; i <=59; i++){ // The value of 59 is dependent on the size of this years ImageCollection.
  var mergedWater = mergerWater.merge(ee.FeatureCollection(ee.List(fcSamplesWater).get(i)));
  var mergerWater = mergedWater;
}

// Merge all braggTraining instances together to create one Bragg data training set. 
var mergerBragg = ee.FeatureCollection([]);
for (var i=0; i <=3; i++){ // The value of 3 is dependent on the amount of Bragg scattering present in that year.
  var mergedBragg = mergerBragg.merge(ee.FeatureCollection(ee.List(fcSamplesBragg).get(i)));
  var mergerBragg = mergedBragg;
}

// Merge both sets together so that it is ready for export
var merger = mergerWater.merge(mergerBragg);

// ------------------------------------------------------------------------------------------------ //
// ------------------------------------ (5). EXPORT DATA ------------------------------------------ //
// ------------------------------------------------------------------------------------------------ //

// Export the FeatureCollection to a CSV file to Google Drive.
Export.table.toDrive({
  collection: merger,
  description:'VV_VH_Ent_GLCM_Bosomtwe_2020_Scl_20_FIXED',
  folder: 'Task 50',
  fileFormat: 'CSV'
});
